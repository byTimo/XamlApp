<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZappChat.Controls">
    <Style TargetType="{x:Type local:PasswordControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PasswordControl}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                		Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding CornerRadius}">
                		<Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <PasswordBox x:Name="Password" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStyle="{TemplateBinding FontStyle}" 
                				FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black" Grid.Column="0" Style="{DynamicResource PasswordBoxStyle}" IsTabStop="True"/>
                            <TextBox x:Name="Text" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStyle="{TemplateBinding FontStyle}" 
                				FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black" Grid.Column="0" Style="{DynamicResource PasswordStyle}" AllowDrop="False" IsTabStop="True" Focusable="True" Visibility="Collapsed"/>
							<TextBox x:Name="Label" Foreground="#FF8D8D8D" Text="Пароль" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStyle="{TemplateBinding FontStyle}" 
                				FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" Background="{x:Null}" BorderBrush="{x:Null}" Grid.Column="0" Style="{DynamicResource PasswordStyle}" AllowDrop="False" IsTabStop="False" Focusable="True" SelectionBrush="#003399FF" IsReadOnly="False" />
                			<ToggleButton x:Name="ShowPasswordButton" Height="Auto" Grid.Column="1" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Style="{DynamicResource ToggleButtonStyle}" Focusable="False" IsTabStop="False" >
                                <Image Height="17" Source="/ZappChat;component/Images/Eye.png" Stretch="Fill" Width="27"/>
                            </ToggleButton>
                		</Grid>
                	</Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="PasswordStyle" TargetType="{x:Type TextBox}">
    	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    	<Setter Property="AllowDrop" Value="true"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type TextBox}">
    				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
    					</Trigger>
    					<!--<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true">
    						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
    					</Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<!--<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
    				<Condition Property="IsSelectionActive" Value="false"/>
    			</MultiTrigger.Conditions>
    			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
    		</MultiTrigger>-->
    	</Style.Triggers>
    </Style>
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
    	<Setter Property="PasswordChar" Value="●"/>
    	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    	<Setter Property="AllowDrop" Value="true"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type PasswordBox}">
    				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
    					</Trigger>
    					<!--<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true">
    						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
    					</Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<!--<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
    				<Condition Property="IsSelectionActive" Value="false"/>
    			</MultiTrigger.Conditions>
    			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
    		</MultiTrigger>-->
    	</Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
    	<Setter Property="Control.Template">
    		<Setter.Value>
    			<ControlTemplate>
    				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>


</ResourceDictionary>