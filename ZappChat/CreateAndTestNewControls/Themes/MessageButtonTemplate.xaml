<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:createAndTestNewControls="clr-namespace:CreateAndTestNewControls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<Style TargetType="{x:Type createAndTestNewControls:MessageButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type createAndTestNewControls:MessageButton}">
					<Grid x:Name="grid" Width="115" HorizontalAlignment="Left">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="115"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="BlueRectMasck">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="BlueRectMasck">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.999"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="BlueRectMasck">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.062"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BlueRectMasck">
											<EasingColorKeyFrame KeyTime="0" Value="#FF1FB6E4"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="BlueRectMasck">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BlueRectMasck">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BlueRect">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BlueRectMasck">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BlueRectMasck">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BlueRectMasck">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BlueRect">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BlueRect">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BlueRect">
											<EasingColorKeyFrame KeyTime="0" Value="#FF6BD5F5"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MessageView">
								<VisualStateGroup.Transitions>
									<VisualTransition From="NoUnreadMessages" GeneratedDuration="0" To="UnreadMessages">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="155" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BlueRectMasck">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="WhiteRectMask">
												<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
												<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0,0,15,0"/>
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="UnreadMessages" GeneratedDuration="0" To="NoUnreadMessages">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="115" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BlueRectMasck">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.193" Value="{x:Static Visibility.Collapsed}"/>
											</ObjectAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="WhiteRectMask">
												<EasingThicknessKeyFrame KeyTime="0" Value="0,0,15,0"/>
												<EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0"/>
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="UnreadMessages">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="155"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BlueRectMasck">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="WhiteRectMask">
											<EasingThicknessKeyFrame KeyTime="0" Value="0,0,15,0"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoUnreadMessages">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BlueRectMasck">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BlueRect" RadiusX="15" RadiusY="15" Stroke="#FF1FB6E4" StrokeThickness="0" >
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF1FB6E4" Offset="0"/>
									<GradientStop Color="#FF1FB6E4" Offset="1"/>
									<GradientStop Color="#FF1FB6E4" Offset="0.5"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="BlueRectMasck" Grid.Column="0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="15,0,0,0" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF1FB6E4" Offset="0"/>
									<GradientStop Color="#FF1FB6E4" Offset="0.5"/>
									<GradientStop Color="#FF1FB6E4" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="WhiteRect" Grid.Column="1" Fill="White" HorizontalAlignment="Stretch" Height="Auto" Margin="0" RadiusY="15" RadiusX="15" Stroke="#0064CEEE" StrokeThickness="0" VerticalAlignment="Stretch" Width="Auto"/>
						<Rectangle x:Name="WhiteRectMask" Grid.Column="1" Fill="White" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Margin="0" />
						<TextBox x:Name="Counter" Text="{TemplateBinding MessagesCount}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" FontFamily="Arial" FontSize="14.667" FontWeight="Bold" Foreground="#FF1FB6E4" Margin="1,0"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Margin="15,0"/>
						<Border x:Name="border" BorderBrush="#FF64CEEE" BorderThickness="2" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" CornerRadius="12" Grid.ColumnSpan="2" d:IsHidden="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Здесь необходимо определить записи словаря ресурсов. -->
</ResourceDictionary>